name: Test CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.15.0'

jobs:
  test-pipeline:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
        env:
          NPM_CONFIG_REGISTRY: https://registry.npmjs.org/

      - name: Lint backend
        run: pnpm --filter backend lint

      - name: Lint frontend
        run: pnpm --filter frontend lint

      - name: Test backend
        run: pnpm --filter backend test

      - name: Test frontend
        run: pnpm --filter frontend test:run
        env:
          NODE_ENV: test

      - name: Build backend
        run: pnpm --filter backend build

      - name: Build frontend
        run: pnpm --filter frontend build

      - name: Test Results
        run: |
          echo "âœ… All tests and builds completed successfully!"
          echo "Backend build size: $(du -sh packages/backend/dist | cut -f1)"
          echo "Frontend build size: $(du -sh packages/frontend/dist | cut -f1)"